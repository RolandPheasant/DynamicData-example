<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamicData.ReactiveUI</name>
    </assembly>
    <members>
        <member name="M:DynamicData.ReactiveUI.DynamicDataEx.Bind``1(System.IObservable{DynamicData.IChangeSet{``0}},ReactiveUI.ReactiveList{``0},System.Int32)">
            <summary>
            Binds a clone of the observable changeset to the target ReactiveList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="targetCollection">The target collection.</param>
            <param name="resetThreshold">The reset threshold.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source
            or
            targetCollection
            </exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.DynamicDataEx.Bind``2(System.IObservable{DynamicData.IChangeSet{``0,``1}},ReactiveUI.ReactiveList{``0},System.Int32)">
            <summary>
            Populate and maintain the specified reactive list from the source observable changeset
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="resetThreshold">The reset threshold before a reset event  on the target list is invoked</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            destination
            or
            target
            </exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.DynamicDataEx.Bind``2(System.IObservable{DynamicData.IChangeSet{``0,``1}},DynamicData.IChangeSetAdaptor{``0,``1})">
            <summary>
            Binds the results using the specified changeset adaptor
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">The source.</param>
            <param name="updater">The updater.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.DynamicDataEx.Bind``2(System.IObservable{DynamicData.ISortedChangeSet{``0,``1}},ReactiveUI.ReactiveList{``0},System.Int32)">
            <summary>
            Populate and maintain the specified reactive list from the source observable changeset
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="resetThreshold">The reset threshold before a reset event  on the target list is invoked</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            destination
            or
            target
            </exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.DynamicDataEx.Bind``2(System.IObservable{DynamicData.ISortedChangeSet{``0,``1}},DynamicData.ISortedChangeSetAdaptor{``0,``1})">
            <summary>
            Binds the results using the specified sorted changeset adaptor
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">The source.</param>
            <param name="updater">The updater.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="T:DynamicData.ReactiveUI.ObservableListToReactiveListAdaptor`1">
            <summary>
            Adaptor used to populate a <see cref="T:ReactiveUI.ReactiveList`1"/> from an observable changeset.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
        </member>
        <member name="M:DynamicData.ReactiveUI.ObservableListToReactiveListAdaptor`1.#ctor(ReactiveUI.ReactiveList{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DynamicData.ReactiveUI.ObservableCacheToReactiveListAdaptor`2"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="resetThreshold">The reset threshold.</param>
            <exception cref="T:System.ArgumentNullException">target</exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.ObservableListToReactiveListAdaptor`1.Adapt(DynamicData.IChangeSet{`0})">
            <summary>
            Maintains the specified collection from the changes
            </summary>
            <param name="changes">The changes.</param>
        </member>
        <member name="T:DynamicData.ReactiveUI.ObservableCacheToReactiveListAdaptor`2">
            <summary>
            Adaptor used to populate a <see cref="T:ReactiveUI.ReactiveList`1"/> from an observable changeset.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
        </member>
        <member name="M:DynamicData.ReactiveUI.ObservableCacheToReactiveListAdaptor`2.#ctor(ReactiveUI.ReactiveList{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DynamicData.ReactiveUI.ObservableCacheToReactiveListAdaptor`2"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="resetThreshold">The reset threshold.</param>
            <exception cref="T:System.ArgumentNullException">target</exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.ObservableCacheToReactiveListAdaptor`2.Adapt(DynamicData.IChangeSet{`0,`1})">
            <summary>
            Adapts the specified changeset
            </summary>
            <param name="changes">The changes.</param>
        </member>
        <member name="T:DynamicData.ReactiveUI.ReactiveListEx">
            <summary>
            Extensions to convert a reactive list collection into a dynamic stream
            </summary>
        </member>
        <member name="M:DynamicData.ReactiveUI.ReactiveListEx.ToObservableChangeSet``1(ReactiveUI.ReactiveList{``0})">
            <summary>
            Convert an observable collection into a dynamic stream of change sets, using the hash code as the object's key
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.ReactiveListEx.ToObservableChangeSet``2(ReactiveUI.ReactiveList{``0},System.Func{``0,``1})">
            <summary>
            Clones the ReactiveList from all changes
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">The source.</param>
            <param name="keySelector">The key selector.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source
            or
            keySelector</exception>
        </member>
        <member name="T:DynamicData.ReactiveUI.SortedReactiveListAdaptor`2">
            <summary>
            Adaptor used to populate a <see cref="T:ReactiveUI.ReactiveList`1"/> from an observable sortedchangeset.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
        </member>
        <member name="M:DynamicData.ReactiveUI.SortedReactiveListAdaptor`2.#ctor(ReactiveUI.ReactiveList{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DynamicData.ReactiveUI.SortedReactiveListAdaptor`2"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="resetThreshold">The reset threshold.</param>
            <exception cref="T:System.ArgumentNullException">target</exception>
        </member>
        <member name="M:DynamicData.ReactiveUI.SortedReactiveListAdaptor`2.Adapt(DynamicData.ISortedChangeSet{`0,`1})">
            <summary>
            Adapts the specified sorted changeset
            </summary>
            <param name="changes">The changes.</param>
        </member>
    </members>
</doc>
